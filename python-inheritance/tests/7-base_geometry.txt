"""
Tests for  BaseGeometry function,
asking us Write a class BaseGeometry that inherits from list
"""

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  ...
TypeError: name must be an integer

>>> bg.integer_validator("age", "0")
Traceback (most recent call last):
  ...
ValueError: age must be greater than 0

>>> mod = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
	>>> len(mod) > 1
	True

>>> bg.integer_validator("distance", "-4")
Traceback (most recent call last):
  ...
ValueError: distance must be greater than 0

 >>> c = __import__("7-base_geometry").BaseGeometry.__doc__
    >>> len(c) > 1
    True

>>> bg.integer_validator("float_test", 5.0)
Traceback (most recent call last):
  ...
TypeError: float_test must be an integer

>>> m = __import__("7-base_geometry").__doc__
    >>> len(m) > 1
    True

>>> bg.integer_validator("bool_test", True)
Traceback (most recent call last):
  ...
TypeError: bool_test must be an integer

